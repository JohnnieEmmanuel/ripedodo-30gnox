{"version":3,"file":"src_app_uploadmovie_uploadmovie_module_ts.js","mappings":"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","sources":["./src/app/uploadmovie/uploadmovie-routing.module.ts","./src/app/uploadmovie/uploadmovie.module.ts","./src/app/uploadmovie/uploadmovie.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UploadmoviePage } from './uploadmovie.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UploadmoviePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UploadmoviePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UploadmoviePageRoutingModule } from './uploadmovie-routing.module';\n\nimport { UploadmoviePage } from './uploadmovie.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UploadmoviePageRoutingModule\n  ],\n  declarations: [UploadmoviePage]\n})\nexport class UploadmoviePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MoviesearchService, SearchType } from '../services/moviesearch.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {MoviecrudService} from '../services/moviecrud.service';\nimport { MovieuploadService,Movie } from '../services/movieupload.service';\n@Component({\n  selector: 'app-uploadmovie',\n  templateUrl: './uploadmovie.page.html',\n  styleUrls: ['./uploadmovie.page.scss'],\n})\nexport class UploadmoviePage implements OnInit {\n\n  information = null;\n movieId  = null;\n  /**\n   * Constructor of our details page\n   * @param activatedRoute Information about the route we are on\n   * @param movieService The movie Service to get data\n   */\n\n\n  private file: File;\n  results: Observable<any>;\n  searchTerm: string = '';\n  comingsoonTerm: string = '';\n\n  type: SearchType = SearchType.all;\n \n  /**\n   * Constructor of our first page\n   * @param movieService The movie Service to get data\n   */ \n  constructor(private movieService: MoviesearchService, private http: HttpClient, private activatedRoute: ActivatedRoute, private movieuploadService:MovieuploadService) { }\n\n\n  searchChanged() {\n    // Call our service function which returns an Observable\n    this.results = this.movieService.searchData(this.searchTerm, this.type);\n  }\n  comingsoonChanged() {\n    // Call our service function which returns an Observable\n    this.results = this.movieService.searchData(this.comingsoonTerm, this.type);\n  }\n\n\n    \n\n   \n  onFileChange(fileChangeEvent) {\n    this.file = fileChangeEvent.target.files[0];\n  }\n  async submitForm() {\n    let formData = new FormData();\n    formData.append(\"file\", this.file, this.file.name);\n    this.http.post(\"http://localhost:5000/uploadvideo\", formData).subscribe((response) => {\n      console.log(response);\n    });\n  }\n\n  \n  \n  ngOnInit() {\n    this.onAdd();\n  }\n\n  onAdd(){\n     // Get the ID that was passed with the URL\n     let id = this.activatedRoute.snapshot.paramMap.get('id');\n  if(id==null){\n    console.log(\"no param passed\")\n  }\n  else{\n     // Get the information from the API\n     this.movieService.getDetails(id).subscribe(result => {\n       this.information = result;\n      this.movieId = id;\n      let moviedata = this.information\n      console.log(moviedata);\n\n let parseJfile = JSON.stringify(moviedata);\nconst parsedData2 = JSON.parse(parseJfile);\nconsole.log(\"test test\"+parsedData2)\nconsole.log(parsedData2.Year)\n\n// let url = 'https://ripedodo.s3.amazonaws.com/uploads/'+parsedData2.Title+'.mp4';\nlet url = 'https://d1deccugb2p5vs.cloudfront.net/'+parsedData2.Title+'.mp4';\n\nlet movieURL = url.replace(/\\s/g, '+');\n\n// let movieURL = movieURLNospace.toLocaleLowerCase();\nconsole.log(movieURL)\nlet data = {\n  movietitle: parsedData2.Title,\n  movieurl: movieURL,\n  movieruntime: parsedData2.Runtime,\n  movieplot:parsedData2.Plot,\n  moviegenre: parsedData2.Genre,\n  movieresponse: parsedData2.Response,\n  movietype: parsedData2.Type,\n  movieidmbid: parsedData2.imdbID,\n  movieposter: parsedData2.Poster,\n  movieseasons: parsedData2.totalSeasons,\n  moviecasts:parsedData2.Actors,\n  movieratedpg:parsedData2.Ratedpg\n\n}\nthis.movieuploadService.movieupload(data).subscribe((response)=>{\n  console.log(response);\n\n})\n\n\n\n\n     });\n  }\n    \n\n  }\n\n\n  onComingsoon(temp: any){\n    // Get the ID that was passed with the URL\n    // let id = this.activatedRoute.snapshot.paramMap.get('id');\nlet id = temp;\nconsole.log(\"this is the movie is\",id)\n \n    // Get the information from the API\n    this.movieService.getDetails(id).subscribe(result => {\n      this.information = result;\n     this.movieId = id;\n     let moviedata = this.information\n     console.log(moviedata);\n\nlet parseJfile = JSON.stringify(moviedata);\nconst parsedData2 = JSON.parse(parseJfile);\nconsole.log(\"test test\"+parsedData2)\nconsole.log(parsedData2.Year)\n\n// let url = 'https://ripedodo.s3.amazonaws.com/uploads/'+parsedData2.Title+'.mp4';\nlet url = 'https://d1deccugb2p5vs.cloudfront.net/'+parsedData2.Title+'.mp4';\n\nlet movieURL = url.replace(/\\s/g, '+');\n\n// let movieURL = movieURLNospace.toLocaleLowerCase();\nconsole.log(movieURL)\nlet data = {\n movietitle: parsedData2.Title,\n movieurl: movieURL,\n movieruntime: parsedData2.Runtime,\n movieplot:parsedData2.Plot,\n moviegenre: parsedData2.Genre,\n movieresponse: parsedData2.Response,\n movietype: parsedData2.Type,\n movieidmbid: parsedData2.imdbID,\n movieposter: parsedData2.Poster,\n movieseasons: parsedData2.TotalSeasons,\n moviecasts:parsedData2.Casts,\n movieratedpg:parsedData2.Ratedpg\n\n}\nconsole.log(this.movieuploadService.comingsoon(data).subscribe((response)=>{\n console.log(response);\n\n}))\n\n\n\n\n    });\n\n }\n\n \n\n  \n  \n \n  \n}\n"],"names":["Component","HttpClient","MoviesearchService","SearchType","ActivatedRoute","MovieuploadService","UploadmoviePage","constructor","movieService","http","activatedRoute","movieuploadService","all","searchChanged","results","searchData","searchTerm","type","comingsoonChanged","comingsoonTerm","onFileChange","fileChangeEvent","file","target","files","submitForm","formData","FormData","append","name","post","subscribe","response","console","log","ngOnInit","onAdd","id","snapshot","paramMap","get","getDetails","result","information","movieId","moviedata","parseJfile","JSON","stringify","parsedData2","parse","Year","url","Title","movieURL","replace","data","movietitle","movieurl","movieruntime","Runtime","movieplot","Plot","moviegenre","Genre","movieresponse","Response","movietype","Type","movieidmbid","imdbID","movieposter","Poster","movieseasons","totalSeasons","moviecasts","Actors","movieratedpg","Ratedpg","movieupload","onComingsoon","temp","TotalSeasons","Casts","comingsoon","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}